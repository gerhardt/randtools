(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.4' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[      8057,        232]
NotebookOptionsPosition[      7377,        204]
NotebookOutlinePosition[      7715,        219]
CellTagsIndexPosition[      7672,        216]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
Copyright (c) 2018 Ilja Gerhardt, ilja@quantumlah.org

This program is free software : you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the GNU
General Public License for more details.#
You should have received a copy of the GNU General Public License
along with this program.If not, see < http : // www.gnu.org/licenses/ > .
   \
\>", "Text",
 CellChangeTimes->{{3.727580724830801*^9, 3.727580758826592*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"length", "=", "5000"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "defines", " ", "the", " ", "length", " ", "of", " ", "the", 
    " ", "file", " ", 
    RowBox[{"(", 
     RowBox[{"in", " ", "bytes"}], ")"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.727536871170864*^9, 3.727536874124123*^9}, 
   3.727537441940524*^9, {3.727537571793939*^9, 3.727537579569895*^9}, {
   3.727537744412017*^9, 3.7275377567316837`*^9}, {3.727538133868154*^9, 
   3.7275381413962517`*^9}, {3.727538356739312*^9, 3.727538377595997*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sq", "=", 
   RowBox[{
    RowBox[{"2", " ", "length"}], " ", "+", " ", "1"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "define", " ", "a", " ", "start", " ", "value", " ", "for", " ", "the", 
    " ", "while", " ", "loop"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7275370894904327`*^9, 3.727537101196887*^9}, {
  3.727537581074724*^9, 3.727537602608973*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", "sq", "]"}], ">", 
     RowBox[{"2", " ", "length"}]}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "the", " ", "max", " ", "indicates", " ", "if", " ", "the", " ", 
       "bit"}], "-", 
      RowBox[{"tuples", " ", "are", " ", "equally", " ", "distributed"}]}], 
     " ", "*)"}], "\n", 
    RowBox[{
     RowBox[{"d", "=", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"256", ",", 
        RowBox[{"{", "length", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "lets", " ", "get", " ", "the", " ", "bytes", " ", "our", " ", 
        "there"}], "..."}], " ", "*)"}], "\n", 
     RowBox[{"du", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"RealDigits", "[", 
         RowBox[{"d", ",", "2", ",", "8", ",", "7"}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"we", " ", "want", " ", "the", " ", "binary", " ", 
        RowBox[{"(", "2", ")"}], " ", "of", " ", "this", " ", "in", " ", "an",
         " ", "array"}], ",", " ", 
       RowBox[{
       "where", " ", "each", " ", "of", " ", "the", " ", "values", " ", "are",
         " ", "8", " ", "long"}]}], " ", "*)"}], "\n", 
     RowBox[{"tu", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], ",", 
        "2"}], "]"}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"let", "'"}], "s", " ", "get", " ", "the", " ", "tuples", " ", 
       "to", " ", "test", " ", 
       RowBox[{"(", 
        RowBox[{
        "can", " ", "also", " ", "be", " ", "outside", " ", "the", " ", 
         "loop"}], " "}]}], "*)"}], "\n", 
     RowBox[{"sq", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SequenceCount", "[", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"du", ",", 
              RowBox[{"Take", "[", 
               RowBox[{"du", ",", "1"}], "]"}]}], "}"}], "]"}], ",", "#", ",", 
           RowBox[{"Overlaps", "\[Rule]", " ", "True"}]}], "]"}], "&"}], ",", 
        "tu"}], "]"}]}], ";"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"check", " ", "the", " ", "tuples"}], ",", " ", 
     RowBox[{
     "last", " ", "one", " ", "is", " ", "taking", " ", "the", " ", "first", 
      " ", "bit"}]}], " ", "*)"}], "\[IndentingNewLine]", "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.727536855601915*^9, 3.7275369198609962`*^9}, {
  3.72753695577291*^9, 3.727537004676733*^9}, {3.72753705597374*^9, 
  3.7275370569725227`*^9}, {3.7275376048179893`*^9, 3.72753770593744*^9}, {
  3.727537929010008*^9, 3.7275379427375107`*^9}, {3.72753832963601*^9, 
  3.7275383485977917`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sq", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"these", " ", "are", " ", "the", " ", "binary", " ", "tuples"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.727536908981554*^9, 3.727536909155582*^9}, {
  3.727537707369207*^9, 3.7275377160812683`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10000", ",", "10000", ",", "10000", ",", "10000"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.727536910294969*^9, 3.7275369497120857`*^9}, {
   3.727536988792552*^9, 3.727536998947757*^9}, 3.7275370347892036`*^9, {
   3.7275370662500963`*^9, 3.727537113651454*^9}, 3.727537373361355*^9, 
   3.727538136339452*^9, 3.727538357272224*^9, 3.727538388250535*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "du", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "are", " ", "the", " ", "bits", " ", "which", " ", "are", " ",
     "one"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.727537039376954*^9, 3.727537043061029*^9}, {
  3.727537717529214*^9, 3.72753772986569*^9}}],

Cell[BoxData["20000"], "Output",
 CellChangeTimes->{{3.727537043399063*^9, 3.7275371137527857`*^9}, 
   3.727537373400502*^9, 3.727538136369273*^9, 3.7275383572940073`*^9, 
   3.7275383882910423`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/Desktop/goodrand.bin\>\"", ",", "du", ",", "\"\<Bit\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.727537048853531*^9, 3.727537050147265*^9}, {
  3.727537118556188*^9, 3.727537139475486*^9}, {3.72753731785905*^9, 
  3.7275373386996613`*^9}}],

Cell[BoxData["\<\"~/Desktop/goodrand.bin\"\>"], "Output",
 CellChangeTimes->{{3.727537066545045*^9, 3.7275371401504717`*^9}, 
   3.7275373427812757`*^9, 3.7275373734743958`*^9, 3.7275381364081697`*^9, 
   3.727538357320487*^9, 3.727538388324708*^9}]
}, Open  ]]
},
WindowSize->{1364, 691},
WindowMargins->{{-10, Automatic}, {Automatic, -10}},
FrontEndVersion->"10.4 for Linux x86 (64-bit) (April 11, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 702, 15, 266, "Text"],
Cell[1263, 37, 579, 12, 32, "Input"],
Cell[1845, 51, 411, 10, 32, "Input"],
Cell[2259, 63, 3237, 85, 143, "Input"],
Cell[CellGroupData[{
Cell[5521, 152, 278, 6, 32, "Input"],
Cell[5802, 160, 398, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6237, 172, 332, 8, 32, "Input"],
Cell[6572, 182, 200, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6809, 190, 300, 6, 32, "Input"],
Cell[7112, 198, 249, 3, 32, "Output"]
}, Open  ]]
}
]
*)

